openapi: 3.0.3
info:
  title: Internship Management REST API
  description: REST API endpoints for internship management
  version: v1

servers:
  - url: http://localhost:8185/api/internship-management/v1

paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: authenticate user
      description: get access token after identified the user
      operationId: loginUser
      requestBody:
        description: data that contain the credentials of the user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequestDTO'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenDTO'
  /register/student:
    post:
      tags:
        - Student
      summary: Create a new student
      description: Create a new student
      operationId: createStudent
      requestBody:
        description: data needed to create a student
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentRegistrationRequestDTO'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentIdResponseDTO'
  /students:
    get:
      tags:
        - Student
      summary: get student User
      description: get student User
      operationId: getCurrentStudent
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDTO'
    put:
      tags:
        - Auth
      summary: update a student
      description: update an student
      operationId: updateStudent
      requestBody:
        description: Data that will be used to modify the student
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStudentDTO'
      responses:
        204:
          description: successful operation
  /students/{id}:
    get:
      tags:
        - Student
      summary: Get a student by ID
      operationId: getStudentById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Student found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDTO'
        '404':
          description: Student not found
    delete:
      tags:
        - Student
      summary: Delete a student
      operationId: deleteStudent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Student successfully deleted
        '404':
          description: Student not found

components:
  schemas:
    LoginRequestDTO:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: johndoe
        password:
          type: string
          format: password
          example: mySecret123
    LoginResponseDTO:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        userId:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: johndoe
    CreateStudentRequestDTO:
      type: object
      required:
        - password
        - email
        - studyLevel
        - speciality
        - university
      properties:
        username:
          type: string
          example: aurellefoko
        password:
          type: string
          format: password
          example: motdepasse123
        email:
          type: string
          format: email
          example: aurelle@example.com
        firstName:
          type: string
          example: Aurelle
        lastName:
          type: string
          example: Foko
        studyLevel:
          type: string
          example: Licence 3
        speciality:
          type: string
          example: Informatique
        university:
          type: string
          example: UCAC-ICAM
        registrationDate:
          type: string
          format: date
          example: 2024-09-01
    AuthRequestDTO:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    TokenDTO:
      type: object
      properties:
        value:
          type: string
    StudentRegistrationRequestDTO:
      type: object
      required:
        - password
        - email
        - phoneNumber
      properties:
        email:
          type: string
        password:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        dateOfBirth:
          type: string
          format: date
        gender:
          $ref: '#/components/schemas/GenderDTO'
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumberDTO'
    GenderDTO:
      type: string
      enum:
        - MALE
        - FEMALE
    RegistrationDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: created user ID
        accessToken:
          $ref: '#/components/schemas/TokenDTO'
    StudentDTO:
      type: object
      required:
        - id
        - username
        - email
        - studyLevel
        - speciality
        - university
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
          example: aurellefoko
        email:
          type: string
          format: email
          example: aurelle@example.com
        firstName:
          type: string
          example: Aurelle
        lastName:
          type: string
          example: Foko
        studyLevel:
          type: string
          example: Licence 3
        speciality:
          type: string
          example: Informatique
        university:
          type: string
          example: UCAC-ICAM
        registrationDate:
          type: string
          format: date
          example: 2024-09-01
        gender:
          $ref: '#/components/schemas/GenderDTO'
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumberDTO'
    UpdateStudentDTO:
      type: object
      properties:
        firstname:
          type: string
          description: student firstname
        lastname:
          type: string
          description: student lastname
        dateOfBirth:
          type: string
          format: date
        gender:
          $ref: '#/components/schemas/GenderDTO'
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumberDTO'
    PhoneNumberDTO:
      type: object
      properties:
        number:
          type: string
          example: 677889900
        countryCode:
          type: string
          example: 237
    StudentIdResponseDTO:
      type: object
      properties:
        value:
          type: string
          format: uuid
