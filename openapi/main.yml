openapi: 3.0.3
info:
  title: Internship Management REST API
  description: REST API endpoints for internship management
  version: v1

servers:
  - url: http://localhost:8185/api/internship-management/v1

paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: authenticate user
      description: get access token after identified the user
      operationId: loginUser
      requestBody:
        description: data that contain the credentials of the user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequestDTO'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenDTO'
  /register/supervisor:
    post:
      tags:
        - Supervisor
      summary: Create new supervisor
      operationId: createSupervisor
      requestBody:
        description: data needed to create a supervisor
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupervisorRegistrationRequestDTO'
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupervisorIdResponseDTO'
  /supervisors:
    get:
      tags:
        - Supervisor
      summary: Get all supervisors
      operationId: getAllSupervisors
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupervisorDTO'
  /supervisors/{id}:
    get:
      tags:
        - Supervisor
      summary: Get supervisor by ID
      operationId: getSupervisorById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Supervisor found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupervisorDTO'
        404:
          description: Supervisor not found

    put:
      tags:
        - Supervisor
      summary: Update supervisor
      operationId: updateSupervisor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSupervisorDTO'
      responses:
        204:
          description: Supervisor updated

    delete:
      tags:
        - Supervisor
      summary: Delete supervisor
      operationId: deleteSupervisor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: Supervisor deleted
  /internship:
    post:
      tags:
        - InternshipApplication
      summary: Create a new internship application
      operationId: createInternshipApplication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternshipApplicationRequestDTO'
      responses:
        '201':
          description: Internship application created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternshipApplicationIdDTO'
    get:
      tags:
        - InternshipApplication
      summary: Get all internship applications
      operationId: getAllInternshipApplications
      responses:
        '200':
          description: List of internship applications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternshipApplicationDTO'
        '404':
          description: No Internship application not found
  /internship/{internshipId}:
    get:
      tags:
        - InternshipApplication
      summary: Get internship application by ID
      operationId: getInternshipApplicationById
      parameters:
        - name: internshipId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Internship application found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternshipApplicationDTO'
        '404':
          description: Internship application not found
  /internship/{internshipId}/accept:
    post:
      summary: Accepter une candidature
      operationId: acceptInternship
      tags:
        - InternshipApplication
      parameters:
        - name: internshipId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID de la candidature à accepter
      responses:
        '200':
          description: Candidature acceptée avec succès
        '404':
          description: Candidature non trouvée
  /internship/{internshipId}/reject:
    post:
      summary: Refuser une candidature
      operationId: rejectInternshipById
      tags:
        - InternshipApplication
      parameters:
        - name: internshipId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID de la candidature à refuser
      requestBody:
        description: Optionnel, raison du refus
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReasonDTO'
      responses:
        '200':
          description: Candidature refusée avec succès
        '404':
          description: Candidature non trouvée
  /internship/{internshipId}/assign-supervisor:
    post:
      tags:
        - InternshipApplication
      summary: Assign a supervisor to an accepted internship application
      operationId: assignSupervisor
      parameters:
        - name: internshipId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignSupervisorRequestDTO'
      responses:
        '204':
          description: Supervisor assigned successfully
        '404':
          description: Internship or Supervisor not found
        '400':
          description: Cannot assign supervisor. Internship is not accepted.
  /documents/upload:
    post:
      tags:
        - Documents
      summary: Upload a document
      description: Upload a single document (PDF, Word, Excel...) as multipart/form-data
      operationId: uploadDocument
      requestBody:
        description: Document file to upload
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: Document file to upload
      responses:
        201:
          description: Document uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedDocumentIdDTO'
        400:
          description: Invalid file format or size
        500:
          description: Internal server error
  /documents/download/{id}:
    get:
      tags:
        - Documents
      summary: Download a PDF document by ID
      description: Download the PDF file associated with the given document ID
      operationId: downloadPdfDocument
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the document to download
          schema:
            type: string
      responses:
        200:
          description: PDF file retrieved successfully
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        404:
          description: Document not found
        500:
          description: Internal server error
components:
  schemas:
    CreatedDocumentIdDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
    LoginRequestDTO:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: johndoe
        password:
          type: string
          format: password
          example: mySecret123
    LoginResponseDTO:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        userId:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: johndoe

    AuthRequestDTO:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    TokenDTO:
      type: object
      properties:
        value:
          type: string

    GenderDTO:
      type: string
      enum:
        - MALE
        - FEMALE
    RegistrationDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: created user ID
        accessToken:
          $ref: '#/components/schemas/TokenDTO'
    PhoneNumberDTO:
      type: object
      properties:
        number:
          type: string
          example: 677889900
        countryCode:
          type: string
          example: 237
    SupervisorDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        companyRole:
          type: string
    UpdateSupervisorDTO:
      type: object
      properties:
        name:
          type: string
        companyRole:
          type: string
    SupervisorRegistrationRequestDTO:
      type: object
      required:
        - name
        - companyRole
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
        dateOfBirth:
          type: string
          format: date
        gender:
          $ref: '#/components/schemas/GenderDTO'
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumberDTO'
        companyRole:
          type: string
          description: Role in the company (e.g., Manager, Tutor)
    SupervisorIdResponseDTO:
      type: object
      properties:
        value:
          type: string
          format: uuid
    InternshipApplicationRequestDTO:
      type: object
      required:
          - firstName
          - lastName
          - studyLevel
          - speciality
          - university
          - documentId
          - startDate
          - endDate
          - phoneNumber
          - email
      properties:
          firstName:
            type: string
          lastName:
            type: string
          studyLevel:
            type: string
          speciality:
            type: string
          university:
            type: string
          email:
            type: string
          documentId:
            type: string
            format: uuid
            description: Path or identifier of the CV file
          startDate:
            type: string
            format: date
          endDate:
            type: string
            format: date
          phoneNumber:
              $ref: '#/components/schemas/PhoneNumberDTO'
    InternshipApplicationIdDTO:
      type: object
      properties:
        value:
          type: string
          format: uuid
    InternshipApplicationDTO:
      type: object
      properties:
        internshipId:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        studyLevel:
          type: string
        email:
          type: string
        speciality:
          type: string
        university:
          type: string
        documentId:
          type: string
          format: uuid
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        status:
          type: string
          enum: [ PUBLISHED, ACCEPTED, REJECTED, ASSIGN ]
        submissionDate:
          type: string
          format: date
        phoneNumber:
          $ref: '#/components/schemas/PhoneNumberDTO'
    UpdateInternshipApplicationDTO:
      type: object
      description: Fields to update in an internship application
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        studyLevel:
          type: string
        speciality:
          type: string
        university:
          type: string
        documentId:
          type: string
          format: uuid
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        phoneNumber: # ✅ Ajoutez ceci aussi
          $ref: '#/components/schemas/PhoneNumberDTO'
    AssignSupervisorRequestDTO:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
    ReasonDTO:
      type: object
      required:
        - description
      properties:
        description:
          type: string
